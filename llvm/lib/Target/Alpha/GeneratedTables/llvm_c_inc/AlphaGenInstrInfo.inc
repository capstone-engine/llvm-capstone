/* Capstone Disassembly Engine, http://www.capstone-engine.org */
/* By Nguyen Anh Quynh <aquynh@gmail.com>, 2013-2022, */
/*    Rot127 <unisono@quyllur.org> 2022-2023 */
/* Automatically generated file by Capstone's LLVM TableGen Disassembler Backend. */

/* LLVM-commit: <commit> */
/* LLVM-tag: <tag> */

/* Do not edit. */

/* Capstone's LLVM TableGen Backends: */
/* https://github.com/capstone-engine/llvm-capstone */

#ifdef GET_INSTRINFO_ENUM
#undef GET_INSTRINFO_ENUM

  enum {
    ALPHA_PHI	= 0,
    ALPHA_INLINEASM	= 1,
    ALPHA_INLINEASM_BR	= 2,
    ALPHA_CFI_INSTRUCTION	= 3,
    ALPHA_EH_LABEL	= 4,
    ALPHA_GC_LABEL	= 5,
    ALPHA_ANNOTATION_LABEL	= 6,
    ALPHA_KILL	= 7,
    ALPHA_EXTRACT_SUBREG	= 8,
    ALPHA_INSERT_SUBREG	= 9,
    ALPHA_IMPLICIT_DEF	= 10,
    ALPHA_SUBREG_TO_REG	= 11,
    ALPHA_COPY_TO_REGCLASS	= 12,
    ALPHA_DBG_VALUE	= 13,
    ALPHA_DBG_VALUE_LIST	= 14,
    ALPHA_DBG_INSTR_REF	= 15,
    ALPHA_DBG_PHI	= 16,
    ALPHA_DBG_LABEL	= 17,
    ALPHA_REG_SEQUENCE	= 18,
    ALPHA_COPY	= 19,
    ALPHA_BUNDLE	= 20,
    ALPHA_LIFETIME_START	= 21,
    ALPHA_LIFETIME_END	= 22,
    ALPHA_PSEUDO_PROBE	= 23,
    ALPHA_ARITH_FENCE	= 24,
    ALPHA_STACKMAP	= 25,
    ALPHA_FENTRY_CALL	= 26,
    ALPHA_PATCHPOINT	= 27,
    ALPHA_LOAD_STACK_GUARD	= 28,
    ALPHA_PREALLOCATED_SETUP	= 29,
    ALPHA_PREALLOCATED_ARG	= 30,
    ALPHA_STATEPOINT	= 31,
    ALPHA_LOCAL_ESCAPE	= 32,
    ALPHA_FAULTING_OP	= 33,
    ALPHA_PATCHABLE_OP	= 34,
    ALPHA_PATCHABLE_FUNCTION_ENTER	= 35,
    ALPHA_PATCHABLE_RET	= 36,
    ALPHA_PATCHABLE_FUNCTION_EXIT	= 37,
    ALPHA_PATCHABLE_TAIL_CALL	= 38,
    ALPHA_PATCHABLE_EVENT_CALL	= 39,
    ALPHA_PATCHABLE_TYPED_EVENT_CALL	= 40,
    ALPHA_ICALL_BRANCH_FUNNEL	= 41,
    ALPHA_MEMBARRIER	= 42,
    ALPHA_G_ASSERT_SEXT	= 43,
    ALPHA_G_ASSERT_ZEXT	= 44,
    ALPHA_G_ASSERT_ALIGN	= 45,
    ALPHA_G_ADD	= 46,
    ALPHA_G_SUB	= 47,
    ALPHA_G_MUL	= 48,
    ALPHA_G_SDIV	= 49,
    ALPHA_G_UDIV	= 50,
    ALPHA_G_SREM	= 51,
    ALPHA_G_UREM	= 52,
    ALPHA_G_SDIVREM	= 53,
    ALPHA_G_UDIVREM	= 54,
    ALPHA_G_AND	= 55,
    ALPHA_G_OR	= 56,
    ALPHA_G_XOR	= 57,
    ALPHA_G_IMPLICIT_DEF	= 58,
    ALPHA_G_PHI	= 59,
    ALPHA_G_FRAME_INDEX	= 60,
    ALPHA_G_GLOBAL_VALUE	= 61,
    ALPHA_G_EXTRACT	= 62,
    ALPHA_G_UNMERGE_VALUES	= 63,
    ALPHA_G_INSERT	= 64,
    ALPHA_G_MERGE_VALUES	= 65,
    ALPHA_G_BUILD_VECTOR	= 66,
    ALPHA_G_BUILD_VECTOR_TRUNC	= 67,
    ALPHA_G_CONCAT_VECTORS	= 68,
    ALPHA_G_PTRTOINT	= 69,
    ALPHA_G_INTTOPTR	= 70,
    ALPHA_G_BITCAST	= 71,
    ALPHA_G_FREEZE	= 72,
    ALPHA_G_INTRINSIC_FPTRUNC_ROUND	= 73,
    ALPHA_G_INTRINSIC_TRUNC	= 74,
    ALPHA_G_INTRINSIC_ROUND	= 75,
    ALPHA_G_INTRINSIC_LRINT	= 76,
    ALPHA_G_INTRINSIC_ROUNDEVEN	= 77,
    ALPHA_G_READCYCLECOUNTER	= 78,
    ALPHA_G_LOAD	= 79,
    ALPHA_G_SEXTLOAD	= 80,
    ALPHA_G_ZEXTLOAD	= 81,
    ALPHA_G_INDEXED_LOAD	= 82,
    ALPHA_G_INDEXED_SEXTLOAD	= 83,
    ALPHA_G_INDEXED_ZEXTLOAD	= 84,
    ALPHA_G_STORE	= 85,
    ALPHA_G_INDEXED_STORE	= 86,
    ALPHA_G_ATOMIC_CMPXCHG_WITH_SUCCESS	= 87,
    ALPHA_G_ATOMIC_CMPXCHG	= 88,
    ALPHA_G_ATOMICRMW_XCHG	= 89,
    ALPHA_G_ATOMICRMW_ADD	= 90,
    ALPHA_G_ATOMICRMW_SUB	= 91,
    ALPHA_G_ATOMICRMW_AND	= 92,
    ALPHA_G_ATOMICRMW_NAND	= 93,
    ALPHA_G_ATOMICRMW_OR	= 94,
    ALPHA_G_ATOMICRMW_XOR	= 95,
    ALPHA_G_ATOMICRMW_MAX	= 96,
    ALPHA_G_ATOMICRMW_MIN	= 97,
    ALPHA_G_ATOMICRMW_UMAX	= 98,
    ALPHA_G_ATOMICRMW_UMIN	= 99,
    ALPHA_G_ATOMICRMW_FADD	= 100,
    ALPHA_G_ATOMICRMW_FSUB	= 101,
    ALPHA_G_ATOMICRMW_FMAX	= 102,
    ALPHA_G_ATOMICRMW_FMIN	= 103,
    ALPHA_G_ATOMICRMW_UINC_WRAP	= 104,
    ALPHA_G_ATOMICRMW_UDEC_WRAP	= 105,
    ALPHA_G_FENCE	= 106,
    ALPHA_G_BRCOND	= 107,
    ALPHA_G_BRINDIRECT	= 108,
    ALPHA_G_INVOKE_REGION_START	= 109,
    ALPHA_G_INTRINSIC	= 110,
    ALPHA_G_INTRINSIC_W_SIDE_EFFECTS	= 111,
    ALPHA_G_ANYEXT	= 112,
    ALPHA_G_TRUNC	= 113,
    ALPHA_G_CONSTANT	= 114,
    ALPHA_G_FCONSTANT	= 115,
    ALPHA_G_VASTART	= 116,
    ALPHA_G_VAARG	= 117,
    ALPHA_G_SEXT	= 118,
    ALPHA_G_SEXT_INREG	= 119,
    ALPHA_G_ZEXT	= 120,
    ALPHA_G_SHL	= 121,
    ALPHA_G_LSHR	= 122,
    ALPHA_G_ASHR	= 123,
    ALPHA_G_FSHL	= 124,
    ALPHA_G_FSHR	= 125,
    ALPHA_G_ROTR	= 126,
    ALPHA_G_ROTL	= 127,
    ALPHA_G_ICMP	= 128,
    ALPHA_G_FCMP	= 129,
    ALPHA_G_SELECT	= 130,
    ALPHA_G_UADDO	= 131,
    ALPHA_G_UADDE	= 132,
    ALPHA_G_USUBO	= 133,
    ALPHA_G_USUBE	= 134,
    ALPHA_G_SADDO	= 135,
    ALPHA_G_SADDE	= 136,
    ALPHA_G_SSUBO	= 137,
    ALPHA_G_SSUBE	= 138,
    ALPHA_G_UMULO	= 139,
    ALPHA_G_SMULO	= 140,
    ALPHA_G_UMULH	= 141,
    ALPHA_G_SMULH	= 142,
    ALPHA_G_UADDSAT	= 143,
    ALPHA_G_SADDSAT	= 144,
    ALPHA_G_USUBSAT	= 145,
    ALPHA_G_SSUBSAT	= 146,
    ALPHA_G_USHLSAT	= 147,
    ALPHA_G_SSHLSAT	= 148,
    ALPHA_G_SMULFIX	= 149,
    ALPHA_G_UMULFIX	= 150,
    ALPHA_G_SMULFIXSAT	= 151,
    ALPHA_G_UMULFIXSAT	= 152,
    ALPHA_G_SDIVFIX	= 153,
    ALPHA_G_UDIVFIX	= 154,
    ALPHA_G_SDIVFIXSAT	= 155,
    ALPHA_G_UDIVFIXSAT	= 156,
    ALPHA_G_FADD	= 157,
    ALPHA_G_FSUB	= 158,
    ALPHA_G_FMUL	= 159,
    ALPHA_G_FMA	= 160,
    ALPHA_G_FMAD	= 161,
    ALPHA_G_FDIV	= 162,
    ALPHA_G_FREM	= 163,
    ALPHA_G_FPOW	= 164,
    ALPHA_G_FPOWI	= 165,
    ALPHA_G_FEXP	= 166,
    ALPHA_G_FEXP2	= 167,
    ALPHA_G_FLOG	= 168,
    ALPHA_G_FLOG2	= 169,
    ALPHA_G_FLOG10	= 170,
    ALPHA_G_FNEG	= 171,
    ALPHA_G_FPEXT	= 172,
    ALPHA_G_FPTRUNC	= 173,
    ALPHA_G_FPTOSI	= 174,
    ALPHA_G_FPTOUI	= 175,
    ALPHA_G_SITOFP	= 176,
    ALPHA_G_UITOFP	= 177,
    ALPHA_G_FABS	= 178,
    ALPHA_G_FCOPYSIGN	= 179,
    ALPHA_G_IS_FPCLASS	= 180,
    ALPHA_G_FCANONICALIZE	= 181,
    ALPHA_G_FMINNUM	= 182,
    ALPHA_G_FMAXNUM	= 183,
    ALPHA_G_FMINNUM_IEEE	= 184,
    ALPHA_G_FMAXNUM_IEEE	= 185,
    ALPHA_G_FMINIMUM	= 186,
    ALPHA_G_FMAXIMUM	= 187,
    ALPHA_G_PTR_ADD	= 188,
    ALPHA_G_PTRMASK	= 189,
    ALPHA_G_SMIN	= 190,
    ALPHA_G_SMAX	= 191,
    ALPHA_G_UMIN	= 192,
    ALPHA_G_UMAX	= 193,
    ALPHA_G_ABS	= 194,
    ALPHA_G_LROUND	= 195,
    ALPHA_G_LLROUND	= 196,
    ALPHA_G_BR	= 197,
    ALPHA_G_BRJT	= 198,
    ALPHA_G_INSERT_VECTOR_ELT	= 199,
    ALPHA_G_EXTRACT_VECTOR_ELT	= 200,
    ALPHA_G_SHUFFLE_VECTOR	= 201,
    ALPHA_G_CTTZ	= 202,
    ALPHA_G_CTTZ_ZERO_UNDEF	= 203,
    ALPHA_G_CTLZ	= 204,
    ALPHA_G_CTLZ_ZERO_UNDEF	= 205,
    ALPHA_G_CTPOP	= 206,
    ALPHA_G_BSWAP	= 207,
    ALPHA_G_BITREVERSE	= 208,
    ALPHA_G_FCEIL	= 209,
    ALPHA_G_FCOS	= 210,
    ALPHA_G_FSIN	= 211,
    ALPHA_G_FSQRT	= 212,
    ALPHA_G_FFLOOR	= 213,
    ALPHA_G_FRINT	= 214,
    ALPHA_G_FNEARBYINT	= 215,
    ALPHA_G_ADDRSPACE_CAST	= 216,
    ALPHA_G_BLOCK_ADDR	= 217,
    ALPHA_G_JUMP_TABLE	= 218,
    ALPHA_G_DYN_STACKALLOC	= 219,
    ALPHA_G_STRICT_FADD	= 220,
    ALPHA_G_STRICT_FSUB	= 221,
    ALPHA_G_STRICT_FMUL	= 222,
    ALPHA_G_STRICT_FDIV	= 223,
    ALPHA_G_STRICT_FREM	= 224,
    ALPHA_G_STRICT_FMA	= 225,
    ALPHA_G_STRICT_FSQRT	= 226,
    ALPHA_G_READ_REGISTER	= 227,
    ALPHA_G_WRITE_REGISTER	= 228,
    ALPHA_G_MEMCPY	= 229,
    ALPHA_G_MEMCPY_INLINE	= 230,
    ALPHA_G_MEMMOVE	= 231,
    ALPHA_G_MEMSET	= 232,
    ALPHA_G_BZERO	= 233,
    ALPHA_G_VECREDUCE_SEQ_FADD	= 234,
    ALPHA_G_VECREDUCE_SEQ_FMUL	= 235,
    ALPHA_G_VECREDUCE_FADD	= 236,
    ALPHA_G_VECREDUCE_FMUL	= 237,
    ALPHA_G_VECREDUCE_FMAX	= 238,
    ALPHA_G_VECREDUCE_FMIN	= 239,
    ALPHA_G_VECREDUCE_ADD	= 240,
    ALPHA_G_VECREDUCE_MUL	= 241,
    ALPHA_G_VECREDUCE_AND	= 242,
    ALPHA_G_VECREDUCE_OR	= 243,
    ALPHA_G_VECREDUCE_XOR	= 244,
    ALPHA_G_VECREDUCE_SMAX	= 245,
    ALPHA_G_VECREDUCE_SMIN	= 246,
    ALPHA_G_VECREDUCE_UMAX	= 247,
    ALPHA_G_VECREDUCE_UMIN	= 248,
    ALPHA_G_SBFX	= 249,
    ALPHA_G_UBFX	= 250,
    ALPHA_ADJUSTSTACKDOWN	= 251,
    ALPHA_ADJUSTSTACKUP	= 252,
    ALPHA_ALTENT	= 253,
    ALPHA_CAS32	= 254,
    ALPHA_CAS64	= 255,
    ALPHA_LAS32	= 256,
    ALPHA_LAS64	= 257,
    ALPHA_MEMLABEL	= 258,
    ALPHA_PCLABEL	= 259,
    ALPHA_SWAP32	= 260,
    ALPHA_SWAP64	= 261,
    ALPHA_WTF	= 262,
    ALPHA_ADDLi	= 263,
    ALPHA_ADDLr	= 264,
    ALPHA_ADDQi	= 265,
    ALPHA_ADDQr	= 266,
    ALPHA_ADDS	= 267,
    ALPHA_ADDT	= 268,
    ALPHA_ANDi	= 269,
    ALPHA_ANDr	= 270,
    ALPHA_BEQ	= 271,
    ALPHA_BGE	= 272,
    ALPHA_BGT	= 273,
    ALPHA_BICi	= 274,
    ALPHA_BICr	= 275,
    ALPHA_BISi	= 276,
    ALPHA_BISr	= 277,
    ALPHA_BLBC	= 278,
    ALPHA_BLBS	= 279,
    ALPHA_BLE	= 280,
    ALPHA_BLT	= 281,
    ALPHA_BNE	= 282,
    ALPHA_BR	= 283,
    ALPHA_BSR	= 284,
    ALPHA_CMOVEQi	= 285,
    ALPHA_CMOVEQr	= 286,
    ALPHA_CMOVGEi	= 287,
    ALPHA_CMOVGEr	= 288,
    ALPHA_CMOVGTi	= 289,
    ALPHA_CMOVGTr	= 290,
    ALPHA_CMOVLBCi	= 291,
    ALPHA_CMOVLBCr	= 292,
    ALPHA_CMOVLBSi	= 293,
    ALPHA_CMOVLBSr	= 294,
    ALPHA_CMOVLEi	= 295,
    ALPHA_CMOVLEr	= 296,
    ALPHA_CMOVLTi	= 297,
    ALPHA_CMOVLTr	= 298,
    ALPHA_CMOVNEi	= 299,
    ALPHA_CMOVNEr	= 300,
    ALPHA_CMPBGE	= 301,
    ALPHA_CMPBGEi	= 302,
    ALPHA_CMPEQ	= 303,
    ALPHA_CMPEQi	= 304,
    ALPHA_CMPLE	= 305,
    ALPHA_CMPLEi	= 306,
    ALPHA_CMPLT	= 307,
    ALPHA_CMPLTi	= 308,
    ALPHA_CMPTEQ	= 309,
    ALPHA_CMPTLE	= 310,
    ALPHA_CMPTLT	= 311,
    ALPHA_CMPTUN	= 312,
    ALPHA_CMPULE	= 313,
    ALPHA_CMPULEi	= 314,
    ALPHA_CMPULT	= 315,
    ALPHA_CMPULTi	= 316,
    ALPHA_COND_BRANCH_F	= 317,
    ALPHA_COND_BRANCH_I	= 318,
    ALPHA_CPYSES	= 319,
    ALPHA_CPYSESt	= 320,
    ALPHA_CPYSET	= 321,
    ALPHA_CPYSNS	= 322,
    ALPHA_CPYSNSt	= 323,
    ALPHA_CPYSNT	= 324,
    ALPHA_CPYSNTs	= 325,
    ALPHA_CPYSS	= 326,
    ALPHA_CPYSSt	= 327,
    ALPHA_CPYST	= 328,
    ALPHA_CPYSTs	= 329,
    ALPHA_CTLZ	= 330,
    ALPHA_CTPOP	= 331,
    ALPHA_CTTZ	= 332,
    ALPHA_CVTQS	= 333,
    ALPHA_CVTQT	= 334,
    ALPHA_CVTST	= 335,
    ALPHA_CVTTQ	= 336,
    ALPHA_CVTTS	= 337,
    ALPHA_DIVS	= 338,
    ALPHA_DIVT	= 339,
    ALPHA_EQVi	= 340,
    ALPHA_EQVr	= 341,
    ALPHA_EXTBL	= 342,
    ALPHA_EXTLL	= 343,
    ALPHA_EXTWL	= 344,
    ALPHA_FBEQ	= 345,
    ALPHA_FBGE	= 346,
    ALPHA_FBGT	= 347,
    ALPHA_FBLE	= 348,
    ALPHA_FBLT	= 349,
    ALPHA_FBNE	= 350,
    ALPHA_FCMOVEQS	= 351,
    ALPHA_FCMOVEQT	= 352,
    ALPHA_FCMOVGES	= 353,
    ALPHA_FCMOVGET	= 354,
    ALPHA_FCMOVGTS	= 355,
    ALPHA_FCMOVGTT	= 356,
    ALPHA_FCMOVLES	= 357,
    ALPHA_FCMOVLET	= 358,
    ALPHA_FCMOVLTS	= 359,
    ALPHA_FCMOVLTT	= 360,
    ALPHA_FCMOVNES	= 361,
    ALPHA_FCMOVNET	= 362,
    ALPHA_FTOIS	= 363,
    ALPHA_FTOIT	= 364,
    ALPHA_ITOFS	= 365,
    ALPHA_ITOFT	= 366,
    ALPHA_JMP	= 367,
    ALPHA_JSR	= 368,
    ALPHA_JSR_COROUTINE	= 369,
    ALPHA_JSRs	= 370,
    ALPHA_LDA	= 371,
    ALPHA_LDAH	= 372,
    ALPHA_LDAHg	= 373,
    ALPHA_LDAHr	= 374,
    ALPHA_LDAg	= 375,
    ALPHA_LDAr	= 376,
    ALPHA_LDBU	= 377,
    ALPHA_LDBUr	= 378,
    ALPHA_LDL	= 379,
    ALPHA_LDL_L	= 380,
    ALPHA_LDLr	= 381,
    ALPHA_LDQ	= 382,
    ALPHA_LDQ_L	= 383,
    ALPHA_LDQl	= 384,
    ALPHA_LDQr	= 385,
    ALPHA_LDS	= 386,
    ALPHA_LDSr	= 387,
    ALPHA_LDT	= 388,
    ALPHA_LDTr	= 389,
    ALPHA_LDWU	= 390,
    ALPHA_LDWUr	= 391,
    ALPHA_MB	= 392,
    ALPHA_MULLi	= 393,
    ALPHA_MULLr	= 394,
    ALPHA_MULQi	= 395,
    ALPHA_MULQr	= 396,
    ALPHA_MULS	= 397,
    ALPHA_MULT	= 398,
    ALPHA_ORNOTi	= 399,
    ALPHA_ORNOTr	= 400,
    ALPHA_RETDAG	= 401,
    ALPHA_RETDAGp	= 402,
    ALPHA_RPCC	= 403,
    ALPHA_S4ADDLi	= 404,
    ALPHA_S4ADDLr	= 405,
    ALPHA_S4ADDQi	= 406,
    ALPHA_S4ADDQr	= 407,
    ALPHA_S4SUBLi	= 408,
    ALPHA_S4SUBLr	= 409,
    ALPHA_S4SUBQi	= 410,
    ALPHA_S4SUBQr	= 411,
    ALPHA_S8ADDLi	= 412,
    ALPHA_S8ADDLr	= 413,
    ALPHA_S8ADDQi	= 414,
    ALPHA_S8ADDQr	= 415,
    ALPHA_S8SUBLi	= 416,
    ALPHA_S8SUBLr	= 417,
    ALPHA_S8SUBQi	= 418,
    ALPHA_S8SUBQr	= 419,
    ALPHA_SEXTB	= 420,
    ALPHA_SEXTW	= 421,
    ALPHA_SLi	= 422,
    ALPHA_SLr	= 423,
    ALPHA_SQRTS	= 424,
    ALPHA_SQRTT	= 425,
    ALPHA_SRAi	= 426,
    ALPHA_SRAr	= 427,
    ALPHA_SRLi	= 428,
    ALPHA_SRLr	= 429,
    ALPHA_STB	= 430,
    ALPHA_STBr	= 431,
    ALPHA_STL	= 432,
    ALPHA_STL_C	= 433,
    ALPHA_STLr	= 434,
    ALPHA_STQ	= 435,
    ALPHA_STQ_C	= 436,
    ALPHA_STQr	= 437,
    ALPHA_STS	= 438,
    ALPHA_STSr	= 439,
    ALPHA_STT	= 440,
    ALPHA_STTr	= 441,
    ALPHA_STW	= 442,
    ALPHA_STWr	= 443,
    ALPHA_SUBLi	= 444,
    ALPHA_SUBLr	= 445,
    ALPHA_SUBQi	= 446,
    ALPHA_SUBQr	= 447,
    ALPHA_SUBS	= 448,
    ALPHA_SUBT	= 449,
    ALPHA_UMULHi	= 450,
    ALPHA_UMULHr	= 451,
    ALPHA_WMB	= 452,
    ALPHA_XORi	= 453,
    ALPHA_XORr	= 454,
    ALPHA_ZAPNOTi	= 455,
    INSTRUCTION_LIST_END = 456
  };

#endif // GET_INSTRINFO_ENUM

#ifdef GET_INSTRINFO_MC_DESC
#undef GET_INSTRINFO_MC_DESC


static const MCOperandInfo OperandInfo2[] = { { -1, 0, MCOI_OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo3[] = { { -1, 0, MCOI_OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo4[] = { { -1, 0, MCOI_OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI_OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI_OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo5[] = { { -1, 0, MCOI_OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI_OPERAND_UNKNOWN, CONSTRAINT_MCOI_TIED_TO(0) }, { -1, 0, MCOI_OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI_OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo6[] = { { -1, 0, MCOI_OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI_OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI_OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI_OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo7[] = { { -1, 0, MCOI_OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI_OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo8[] = { { -1, 0, MCOI_OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI_OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI_OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI_OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo9[] = { { -1, 0, MCOI_OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI_OPERAND_UNKNOWN, CONSTRAINT_MCOI_TIED_TO(0) }, };
static const MCOperandInfo OperandInfo10[] = { { -1, 0, MCOI_OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI_OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo11[] = { { -1, 0, MCOI_OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI_OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI_OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI_OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI_OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI_OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo12[] = { { 0, 0|(1<<MCOI_LookupPtrRegClass), MCOI_OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo13[] = { { 0, 0|(1<<MCOI_LookupPtrRegClass), MCOI_OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI_OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI_OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo14[] = { { 0, 0|(1<<MCOI_LookupPtrRegClass), MCOI_OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI_OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo15[] = { { 0, 0|(1<<MCOI_LookupPtrRegClass), MCOI_OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI_OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo16[] = { { -1, 0, MCOI_OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI_LookupPtrRegClass), MCOI_OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI_OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo17[] = { { -1, 0, MCOI_OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_IMM_0, 0 }, };
static const MCOperandInfo OperandInfo18[] = { { -1, 0, MCOI_OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo19[] = { { -1, 0, MCOI_OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo20[] = { { -1, 0, MCOI_OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo21[] = { { -1, 0, MCOI_OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI_OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo22[] = { { -1, 0, MCOI_OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_IMM_0, 0 }, };
static const MCOperandInfo OperandInfo23[] = { { -1, 0, MCOI_OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo24[] = { { -1, 0, MCOI_OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_IMM_0, 0 }, };
static const MCOperandInfo OperandInfo25[] = { { -1, 0, MCOI_OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo26[] = { { -1, 0, MCOI_OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI_OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo27[] = { { -1, 0, MCOI_OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_2, 0 }, { -1, 0, MCOI_OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo28[] = { { -1, 0, MCOI_OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_2, 0 }, { -1, 0, MCOI_OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo29[] = { { -1, 0, MCOI_OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_2, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo30[] = { { -1, 0, MCOI_OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo31[] = { { -1, 0, MCOI_OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo32[] = { { -1, 0, MCOI_OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI_OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo33[] = { { -1, 0, MCOI_OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo34[] = { { -1, 0, MCOI_OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo35[] = { { -1, 0, MCOI_OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI_OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo36[] = { { -1, 0, MCOI_OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo37[] = { { -1, 0, MCOI_OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_IMM_0, 0 }, };
static const MCOperandInfo OperandInfo38[] = { { -1, 0, MCOI_OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI_OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo39[] = { { -1, 0, MCOI_OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_2, 0 }, };
static const MCOperandInfo OperandInfo40[] = { { -1, 0, MCOI_OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_2, 0 }, };
static const MCOperandInfo OperandInfo41[] = { { -1, 0, MCOI_OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI_OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo42[] = { { -1, 0, MCOI_OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo43[] = { { -1, 0, MCOI_OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_2, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_IMM_0, 0 }, };
static const MCOperandInfo OperandInfo44[] = { { -1, 0, MCOI_OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI_OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo45[] = { { Alpha_GPRCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, { Alpha_GPRCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, { Alpha_GPRCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, { Alpha_GPRCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo46[] = { { Alpha_GPRCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, { Alpha_GPRCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, { Alpha_GPRCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo47[] = { { -1, 0, MCOI_OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI_OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI_OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI_OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo48[] = { { Alpha_GPRCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, { Alpha_GPRCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, { -1, 0, MCOI_OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo49[] = { { Alpha_F4RCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, { Alpha_F4RCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, { Alpha_F4RCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo50[] = { { Alpha_F8RCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, { Alpha_F8RCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, { Alpha_F8RCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo51[] = { { Alpha_GPRCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, { -1, 0, MCOI_OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo52[] = { { Alpha_GPRCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, { Alpha_GPRCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, { -1, 0, MCOI_OPERAND_UNKNOWN, 0 }, { Alpha_GPRCRegClassID, 0, MCOI_OPERAND_REGISTER, CONSTRAINT_MCOI_TIED_TO(0) }, };
static const MCOperandInfo OperandInfo53[] = { { Alpha_GPRCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, { Alpha_GPRCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, { Alpha_GPRCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, { Alpha_GPRCRegClassID, 0, MCOI_OPERAND_REGISTER, CONSTRAINT_MCOI_TIED_TO(0) }, };
static const MCOperandInfo OperandInfo54[] = { { -1, 0, MCOI_OPERAND_UNKNOWN, 0 }, { Alpha_F8RCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, { -1, 0, MCOI_OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo55[] = { { -1, 0, MCOI_OPERAND_UNKNOWN, 0 }, { Alpha_GPRCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, { -1, 0, MCOI_OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo56[] = { { Alpha_F4RCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, { Alpha_F8RCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, { Alpha_F4RCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo57[] = { { Alpha_F8RCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, { Alpha_F4RCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, { Alpha_F8RCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo58[] = { { Alpha_GPRCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, { Alpha_GPRCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo59[] = { { Alpha_F4RCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, { Alpha_F8RCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo60[] = { { Alpha_F8RCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, { Alpha_F8RCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo61[] = { { Alpha_F8RCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, { Alpha_F4RCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo62[] = { { Alpha_F8RCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, { -1, 0, MCOI_OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo63[] = { { Alpha_F4RCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, { Alpha_F4RCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, { Alpha_F4RCRegClassID, 0, MCOI_OPERAND_REGISTER, CONSTRAINT_MCOI_TIED_TO(0) }, { Alpha_F8RCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo64[] = { { Alpha_F8RCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, { Alpha_F8RCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, { Alpha_F8RCRegClassID, 0, MCOI_OPERAND_REGISTER, CONSTRAINT_MCOI_TIED_TO(0) }, { Alpha_F8RCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo65[] = { { Alpha_GPRCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, { Alpha_F4RCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo66[] = { { Alpha_GPRCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, { Alpha_F8RCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo67[] = { { Alpha_F4RCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, { Alpha_GPRCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo68[] = { { Alpha_F8RCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, { Alpha_GPRCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo69[] = { { Alpha_GPRCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo70[] = { { Alpha_GPRCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, { -1, 0, MCOI_OPERAND_UNKNOWN, 0 }, { Alpha_GPRCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo71[] = { { Alpha_GPRCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, { -1, 0, MCOI_OPERAND_UNKNOWN, 0 }, { Alpha_GPRCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, { -1, 0, MCOI_OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo72[] = { { Alpha_F4RCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, { -1, 0, MCOI_OPERAND_UNKNOWN, 0 }, { Alpha_GPRCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo73[] = { { Alpha_F8RCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, { -1, 0, MCOI_OPERAND_UNKNOWN, 0 }, { Alpha_GPRCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo74[] = { { Alpha_F4RCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, { Alpha_F4RCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo75[] = { { Alpha_GPRCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, { Alpha_GPRCRegClassID, 0, MCOI_OPERAND_REGISTER, CONSTRAINT_MCOI_TIED_TO(0) }, { -1, 0, MCOI_OPERAND_UNKNOWN, 0 }, { Alpha_GPRCRegClassID, 0, MCOI_OPERAND_REGISTER, 0 }, };

static const MCInstrDesc AlphaInsts[] = {
  { 1, OperandInfo2 },  // Inst #0 = PHI
  { 0, 0 },  // Inst #1 = INLINEASM
  { 0, 0 },  // Inst #2 = INLINEASM_BR
  { 1, OperandInfo3 },  // Inst #3 = CFI_INSTRUCTION
  { 1, OperandInfo3 },  // Inst #4 = EH_LABEL
  { 1, OperandInfo3 },  // Inst #5 = GC_LABEL
  { 1, OperandInfo3 },  // Inst #6 = ANNOTATION_LABEL
  { 0, 0 },  // Inst #7 = KILL
  { 3, OperandInfo4 },  // Inst #8 = EXTRACT_SUBREG
  { 4, OperandInfo5 },  // Inst #9 = INSERT_SUBREG
  { 1, OperandInfo2 },  // Inst #10 = IMPLICIT_DEF
  { 4, OperandInfo6 },  // Inst #11 = SUBREG_TO_REG
  { 3, OperandInfo4 },  // Inst #12 = COPY_TO_REGCLASS
  { 0, 0 },  // Inst #13 = DBG_VALUE
  { 0, 0 },  // Inst #14 = DBG_VALUE_LIST
  { 0, 0 },  // Inst #15 = DBG_INSTR_REF
  { 0, 0 },  // Inst #16 = DBG_PHI
  { 1, OperandInfo2 },  // Inst #17 = DBG_LABEL
  { 2, OperandInfo7 },  // Inst #18 = REG_SEQUENCE
  { 2, OperandInfo7 },  // Inst #19 = COPY
  { 0, 0 },  // Inst #20 = BUNDLE
  { 1, OperandInfo3 },  // Inst #21 = LIFETIME_START
  { 1, OperandInfo3 },  // Inst #22 = LIFETIME_END
  { 4, OperandInfo8 },  // Inst #23 = PSEUDO_PROBE
  { 2, OperandInfo9 },  // Inst #24 = ARITH_FENCE
  { 2, OperandInfo10 },  // Inst #25 = STACKMAP
  { 0, 0 },  // Inst #26 = FENTRY_CALL
  { 6, OperandInfo11 },  // Inst #27 = PATCHPOINT
  { 1, OperandInfo12 },  // Inst #28 = LOAD_STACK_GUARD
  { 1, OperandInfo3 },  // Inst #29 = PREALLOCATED_SETUP
  { 3, OperandInfo13 },  // Inst #30 = PREALLOCATED_ARG
  { 0, 0 },  // Inst #31 = STATEPOINT
  { 2, OperandInfo14 },  // Inst #32 = LOCAL_ESCAPE
  { 1, OperandInfo2 },  // Inst #33 = FAULTING_OP
  { 0, 0 },  // Inst #34 = PATCHABLE_OP
  { 0, 0 },  // Inst #35 = PATCHABLE_FUNCTION_ENTER
  { 0, 0 },  // Inst #36 = PATCHABLE_RET
  { 0, 0 },  // Inst #37 = PATCHABLE_FUNCTION_EXIT
  { 0, 0 },  // Inst #38 = PATCHABLE_TAIL_CALL
  { 2, OperandInfo15 },  // Inst #39 = PATCHABLE_EVENT_CALL
  { 3, OperandInfo16 },  // Inst #40 = PATCHABLE_TYPED_EVENT_CALL
  { 0, 0 },  // Inst #41 = ICALL_BRANCH_FUNNEL
  { 0, 0 },  // Inst #42 = MEMBARRIER
  { 3, OperandInfo17 },  // Inst #43 = G_ASSERT_SEXT
  { 3, OperandInfo17 },  // Inst #44 = G_ASSERT_ZEXT
  { 3, OperandInfo17 },  // Inst #45 = G_ASSERT_ALIGN
  { 3, OperandInfo18 },  // Inst #46 = G_ADD
  { 3, OperandInfo18 },  // Inst #47 = G_SUB
  { 3, OperandInfo18 },  // Inst #48 = G_MUL
  { 3, OperandInfo18 },  // Inst #49 = G_SDIV
  { 3, OperandInfo18 },  // Inst #50 = G_UDIV
  { 3, OperandInfo18 },  // Inst #51 = G_SREM
  { 3, OperandInfo18 },  // Inst #52 = G_UREM
  { 4, OperandInfo19 },  // Inst #53 = G_SDIVREM
  { 4, OperandInfo19 },  // Inst #54 = G_UDIVREM
  { 3, OperandInfo18 },  // Inst #55 = G_AND
  { 3, OperandInfo18 },  // Inst #56 = G_OR
  { 3, OperandInfo18 },  // Inst #57 = G_XOR
  { 1, OperandInfo20 },  // Inst #58 = G_IMPLICIT_DEF
  { 1, OperandInfo20 },  // Inst #59 = G_PHI
  { 2, OperandInfo21 },  // Inst #60 = G_FRAME_INDEX
  { 2, OperandInfo21 },  // Inst #61 = G_GLOBAL_VALUE
  { 3, OperandInfo22 },  // Inst #62 = G_EXTRACT
  { 2, OperandInfo23 },  // Inst #63 = G_UNMERGE_VALUES
  { 4, OperandInfo24 },  // Inst #64 = G_INSERT
  { 2, OperandInfo23 },  // Inst #65 = G_MERGE_VALUES
  { 2, OperandInfo23 },  // Inst #66 = G_BUILD_VECTOR
  { 2, OperandInfo23 },  // Inst #67 = G_BUILD_VECTOR_TRUNC
  { 2, OperandInfo23 },  // Inst #68 = G_CONCAT_VECTORS
  { 2, OperandInfo23 },  // Inst #69 = G_PTRTOINT
  { 2, OperandInfo23 },  // Inst #70 = G_INTTOPTR
  { 2, OperandInfo23 },  // Inst #71 = G_BITCAST
  { 2, OperandInfo25 },  // Inst #72 = G_FREEZE
  { 3, OperandInfo26 },  // Inst #73 = G_INTRINSIC_FPTRUNC_ROUND
  { 2, OperandInfo25 },  // Inst #74 = G_INTRINSIC_TRUNC
  { 2, OperandInfo25 },  // Inst #75 = G_INTRINSIC_ROUND
  { 2, OperandInfo23 },  // Inst #76 = G_INTRINSIC_LRINT
  { 2, OperandInfo25 },  // Inst #77 = G_INTRINSIC_ROUNDEVEN
  { 1, OperandInfo20 },  // Inst #78 = G_READCYCLECOUNTER
  { 2, OperandInfo23 },  // Inst #79 = G_LOAD
  { 2, OperandInfo23 },  // Inst #80 = G_SEXTLOAD
  { 2, OperandInfo23 },  // Inst #81 = G_ZEXTLOAD
  { 5, OperandInfo27 },  // Inst #82 = G_INDEXED_LOAD
  { 5, OperandInfo27 },  // Inst #83 = G_INDEXED_SEXTLOAD
  { 5, OperandInfo27 },  // Inst #84 = G_INDEXED_ZEXTLOAD
  { 2, OperandInfo23 },  // Inst #85 = G_STORE
  { 5, OperandInfo28 },  // Inst #86 = G_INDEXED_STORE
  { 5, OperandInfo29 },  // Inst #87 = G_ATOMIC_CMPXCHG_WITH_SUCCESS
  { 4, OperandInfo30 },  // Inst #88 = G_ATOMIC_CMPXCHG
  { 3, OperandInfo31 },  // Inst #89 = G_ATOMICRMW_XCHG
  { 3, OperandInfo31 },  // Inst #90 = G_ATOMICRMW_ADD
  { 3, OperandInfo31 },  // Inst #91 = G_ATOMICRMW_SUB
  { 3, OperandInfo31 },  // Inst #92 = G_ATOMICRMW_AND
  { 3, OperandInfo31 },  // Inst #93 = G_ATOMICRMW_NAND
  { 3, OperandInfo31 },  // Inst #94 = G_ATOMICRMW_OR
  { 3, OperandInfo31 },  // Inst #95 = G_ATOMICRMW_XOR
  { 3, OperandInfo31 },  // Inst #96 = G_ATOMICRMW_MAX
  { 3, OperandInfo31 },  // Inst #97 = G_ATOMICRMW_MIN
  { 3, OperandInfo31 },  // Inst #98 = G_ATOMICRMW_UMAX
  { 3, OperandInfo31 },  // Inst #99 = G_ATOMICRMW_UMIN
  { 3, OperandInfo31 },  // Inst #100 = G_ATOMICRMW_FADD
  { 3, OperandInfo31 },  // Inst #101 = G_ATOMICRMW_FSUB
  { 3, OperandInfo31 },  // Inst #102 = G_ATOMICRMW_FMAX
  { 3, OperandInfo31 },  // Inst #103 = G_ATOMICRMW_FMIN
  { 3, OperandInfo31 },  // Inst #104 = G_ATOMICRMW_UINC_WRAP
  { 3, OperandInfo31 },  // Inst #105 = G_ATOMICRMW_UDEC_WRAP
  { 2, OperandInfo10 },  // Inst #106 = G_FENCE
  { 2, OperandInfo21 },  // Inst #107 = G_BRCOND
  { 1, OperandInfo20 },  // Inst #108 = G_BRINDIRECT
  { 0, 0 },  // Inst #109 = G_INVOKE_REGION_START
  { 1, OperandInfo2 },  // Inst #110 = G_INTRINSIC
  { 1, OperandInfo2 },  // Inst #111 = G_INTRINSIC_W_SIDE_EFFECTS
  { 2, OperandInfo23 },  // Inst #112 = G_ANYEXT
  { 2, OperandInfo23 },  // Inst #113 = G_TRUNC
  { 2, OperandInfo21 },  // Inst #114 = G_CONSTANT
  { 2, OperandInfo21 },  // Inst #115 = G_FCONSTANT
  { 1, OperandInfo20 },  // Inst #116 = G_VASTART
  { 3, OperandInfo32 },  // Inst #117 = G_VAARG
  { 2, OperandInfo23 },  // Inst #118 = G_SEXT
  { 3, OperandInfo17 },  // Inst #119 = G_SEXT_INREG
  { 2, OperandInfo23 },  // Inst #120 = G_ZEXT
  { 3, OperandInfo33 },  // Inst #121 = G_SHL
  { 3, OperandInfo33 },  // Inst #122 = G_LSHR
  { 3, OperandInfo33 },  // Inst #123 = G_ASHR
  { 4, OperandInfo34 },  // Inst #124 = G_FSHL
  { 4, OperandInfo34 },  // Inst #125 = G_FSHR
  { 3, OperandInfo33 },  // Inst #126 = G_ROTR
  { 3, OperandInfo33 },  // Inst #127 = G_ROTL
  { 4, OperandInfo35 },  // Inst #128 = G_ICMP
  { 4, OperandInfo35 },  // Inst #129 = G_FCMP
  { 4, OperandInfo30 },  // Inst #130 = G_SELECT
  { 4, OperandInfo30 },  // Inst #131 = G_UADDO
  { 5, OperandInfo36 },  // Inst #132 = G_UADDE
  { 4, OperandInfo30 },  // Inst #133 = G_USUBO
  { 5, OperandInfo36 },  // Inst #134 = G_USUBE
  { 4, OperandInfo30 },  // Inst #135 = G_SADDO
  { 5, OperandInfo36 },  // Inst #136 = G_SADDE
  { 4, OperandInfo30 },  // Inst #137 = G_SSUBO
  { 5, OperandInfo36 },  // Inst #138 = G_SSUBE
  { 4, OperandInfo30 },  // Inst #139 = G_UMULO
  { 4, OperandInfo30 },  // Inst #140 = G_SMULO
  { 3, OperandInfo18 },  // Inst #141 = G_UMULH
  { 3, OperandInfo18 },  // Inst #142 = G_SMULH
  { 3, OperandInfo18 },  // Inst #143 = G_UADDSAT
  { 3, OperandInfo18 },  // Inst #144 = G_SADDSAT
  { 3, OperandInfo18 },  // Inst #145 = G_USUBSAT
  { 3, OperandInfo18 },  // Inst #146 = G_SSUBSAT
  { 3, OperandInfo33 },  // Inst #147 = G_USHLSAT
  { 3, OperandInfo33 },  // Inst #148 = G_SSHLSAT
  { 4, OperandInfo37 },  // Inst #149 = G_SMULFIX
  { 4, OperandInfo37 },  // Inst #150 = G_UMULFIX
  { 4, OperandInfo37 },  // Inst #151 = G_SMULFIXSAT
  { 4, OperandInfo37 },  // Inst #152 = G_UMULFIXSAT
  { 4, OperandInfo37 },  // Inst #153 = G_SDIVFIX
  { 4, OperandInfo37 },  // Inst #154 = G_UDIVFIX
  { 4, OperandInfo37 },  // Inst #155 = G_SDIVFIXSAT
  { 4, OperandInfo37 },  // Inst #156 = G_UDIVFIXSAT
  { 3, OperandInfo18 },  // Inst #157 = G_FADD
  { 3, OperandInfo18 },  // Inst #158 = G_FSUB
  { 3, OperandInfo18 },  // Inst #159 = G_FMUL
  { 4, OperandInfo19 },  // Inst #160 = G_FMA
  { 4, OperandInfo19 },  // Inst #161 = G_FMAD
  { 3, OperandInfo18 },  // Inst #162 = G_FDIV
  { 3, OperandInfo18 },  // Inst #163 = G_FREM
  { 3, OperandInfo18 },  // Inst #164 = G_FPOW
  { 3, OperandInfo33 },  // Inst #165 = G_FPOWI
  { 2, OperandInfo25 },  // Inst #166 = G_FEXP
  { 2, OperandInfo25 },  // Inst #167 = G_FEXP2
  { 2, OperandInfo25 },  // Inst #168 = G_FLOG
  { 2, OperandInfo25 },  // Inst #169 = G_FLOG2
  { 2, OperandInfo25 },  // Inst #170 = G_FLOG10
  { 2, OperandInfo25 },  // Inst #171 = G_FNEG
  { 2, OperandInfo23 },  // Inst #172 = G_FPEXT
  { 2, OperandInfo23 },  // Inst #173 = G_FPTRUNC
  { 2, OperandInfo23 },  // Inst #174 = G_FPTOSI
  { 2, OperandInfo23 },  // Inst #175 = G_FPTOUI
  { 2, OperandInfo23 },  // Inst #176 = G_SITOFP
  { 2, OperandInfo23 },  // Inst #177 = G_UITOFP
  { 2, OperandInfo25 },  // Inst #178 = G_FABS
  { 3, OperandInfo33 },  // Inst #179 = G_FCOPYSIGN
  { 3, OperandInfo32 },  // Inst #180 = G_IS_FPCLASS
  { 2, OperandInfo25 },  // Inst #181 = G_FCANONICALIZE
  { 3, OperandInfo18 },  // Inst #182 = G_FMINNUM
  { 3, OperandInfo18 },  // Inst #183 = G_FMAXNUM
  { 3, OperandInfo18 },  // Inst #184 = G_FMINNUM_IEEE
  { 3, OperandInfo18 },  // Inst #185 = G_FMAXNUM_IEEE
  { 3, OperandInfo18 },  // Inst #186 = G_FMINIMUM
  { 3, OperandInfo18 },  // Inst #187 = G_FMAXIMUM
  { 3, OperandInfo33 },  // Inst #188 = G_PTR_ADD
  { 3, OperandInfo33 },  // Inst #189 = G_PTRMASK
  { 3, OperandInfo18 },  // Inst #190 = G_SMIN
  { 3, OperandInfo18 },  // Inst #191 = G_SMAX
  { 3, OperandInfo18 },  // Inst #192 = G_UMIN
  { 3, OperandInfo18 },  // Inst #193 = G_UMAX
  { 2, OperandInfo25 },  // Inst #194 = G_ABS
  { 2, OperandInfo23 },  // Inst #195 = G_LROUND
  { 2, OperandInfo23 },  // Inst #196 = G_LLROUND
  { 1, OperandInfo2 },  // Inst #197 = G_BR
  { 3, OperandInfo38 },  // Inst #198 = G_BRJT
  { 4, OperandInfo39 },  // Inst #199 = G_INSERT_VECTOR_ELT
  { 3, OperandInfo40 },  // Inst #200 = G_EXTRACT_VECTOR_ELT
  { 4, OperandInfo41 },  // Inst #201 = G_SHUFFLE_VECTOR
  { 2, OperandInfo23 },  // Inst #202 = G_CTTZ
  { 2, OperandInfo23 },  // Inst #203 = G_CTTZ_ZERO_UNDEF
  { 2, OperandInfo23 },  // Inst #204 = G_CTLZ
  { 2, OperandInfo23 },  // Inst #205 = G_CTLZ_ZERO_UNDEF
  { 2, OperandInfo23 },  // Inst #206 = G_CTPOP
  { 2, OperandInfo25 },  // Inst #207 = G_BSWAP
  { 2, OperandInfo25 },  // Inst #208 = G_BITREVERSE
  { 2, OperandInfo25 },  // Inst #209 = G_FCEIL
  { 2, OperandInfo25 },  // Inst #210 = G_FCOS
  { 2, OperandInfo25 },  // Inst #211 = G_FSIN
  { 2, OperandInfo25 },  // Inst #212 = G_FSQRT
  { 2, OperandInfo25 },  // Inst #213 = G_FFLOOR
  { 2, OperandInfo25 },  // Inst #214 = G_FRINT
  { 2, OperandInfo25 },  // Inst #215 = G_FNEARBYINT
  { 2, OperandInfo23 },  // Inst #216 = G_ADDRSPACE_CAST
  { 2, OperandInfo21 },  // Inst #217 = G_BLOCK_ADDR
  { 2, OperandInfo21 },  // Inst #218 = G_JUMP_TABLE
  { 3, OperandInfo26 },  // Inst #219 = G_DYN_STACKALLOC
  { 3, OperandInfo18 },  // Inst #220 = G_STRICT_FADD
  { 3, OperandInfo18 },  // Inst #221 = G_STRICT_FSUB
  { 3, OperandInfo18 },  // Inst #222 = G_STRICT_FMUL
  { 3, OperandInfo18 },  // Inst #223 = G_STRICT_FDIV
  { 3, OperandInfo18 },  // Inst #224 = G_STRICT_FREM
  { 4, OperandInfo19 },  // Inst #225 = G_STRICT_FMA
  { 2, OperandInfo25 },  // Inst #226 = G_STRICT_FSQRT
  { 2, OperandInfo21 },  // Inst #227 = G_READ_REGISTER
  { 2, OperandInfo42 },  // Inst #228 = G_WRITE_REGISTER
  { 4, OperandInfo43 },  // Inst #229 = G_MEMCPY
  { 3, OperandInfo40 },  // Inst #230 = G_MEMCPY_INLINE
  { 4, OperandInfo43 },  // Inst #231 = G_MEMMOVE
  { 4, OperandInfo43 },  // Inst #232 = G_MEMSET
  { 3, OperandInfo22 },  // Inst #233 = G_BZERO
  { 3, OperandInfo40 },  // Inst #234 = G_VECREDUCE_SEQ_FADD
  { 3, OperandInfo40 },  // Inst #235 = G_VECREDUCE_SEQ_FMUL
  { 2, OperandInfo23 },  // Inst #236 = G_VECREDUCE_FADD
  { 2, OperandInfo23 },  // Inst #237 = G_VECREDUCE_FMUL
  { 2, OperandInfo23 },  // Inst #238 = G_VECREDUCE_FMAX
  { 2, OperandInfo23 },  // Inst #239 = G_VECREDUCE_FMIN
  { 2, OperandInfo23 },  // Inst #240 = G_VECREDUCE_ADD
  { 2, OperandInfo23 },  // Inst #241 = G_VECREDUCE_MUL
  { 2, OperandInfo23 },  // Inst #242 = G_VECREDUCE_AND
  { 2, OperandInfo23 },  // Inst #243 = G_VECREDUCE_OR
  { 2, OperandInfo23 },  // Inst #244 = G_VECREDUCE_XOR
  { 2, OperandInfo23 },  // Inst #245 = G_VECREDUCE_SMAX
  { 2, OperandInfo23 },  // Inst #246 = G_VECREDUCE_SMIN
  { 2, OperandInfo23 },  // Inst #247 = G_VECREDUCE_UMAX
  { 2, OperandInfo23 },  // Inst #248 = G_VECREDUCE_UMIN
  { 4, OperandInfo44 },  // Inst #249 = G_SBFX
  { 4, OperandInfo44 },  // Inst #250 = G_UBFX
  { 2, OperandInfo7 },  // Inst #251 = ADJUSTSTACKDOWN
  { 2, OperandInfo7 },  // Inst #252 = ADJUSTSTACKUP
  { 1, OperandInfo2 },  // Inst #253 = ALTENT
  { 4, OperandInfo45 },  // Inst #254 = CAS32
  { 4, OperandInfo45 },  // Inst #255 = CAS64
  { 3, OperandInfo46 },  // Inst #256 = LAS32
  { 3, OperandInfo46 },  // Inst #257 = LAS64
  { 4, OperandInfo47 },  // Inst #258 = MEMLABEL
  { 1, OperandInfo2 },  // Inst #259 = PCLABEL
  { 3, OperandInfo46 },  // Inst #260 = SWAP32
  { 3, OperandInfo46 },  // Inst #261 = SWAP64
  { 0, 0 },  // Inst #262 = WTF
  { 3, OperandInfo48 },  // Inst #263 = ADDLi
  { 3, OperandInfo46 },  // Inst #264 = ADDLr
  { 3, OperandInfo48 },  // Inst #265 = ADDQi
  { 3, OperandInfo46 },  // Inst #266 = ADDQr
  { 3, OperandInfo49 },  // Inst #267 = ADDS
  { 3, OperandInfo50 },  // Inst #268 = ADDT
  { 3, OperandInfo48 },  // Inst #269 = ANDi
  { 3, OperandInfo46 },  // Inst #270 = ANDr
  { 2, OperandInfo51 },  // Inst #271 = BEQ
  { 2, OperandInfo51 },  // Inst #272 = BGE
  { 2, OperandInfo51 },  // Inst #273 = BGT
  { 3, OperandInfo48 },  // Inst #274 = BICi
  { 3, OperandInfo46 },  // Inst #275 = BICr
  { 3, OperandInfo48 },  // Inst #276 = BISi
  { 3, OperandInfo46 },  // Inst #277 = BISr
  { 2, OperandInfo51 },  // Inst #278 = BLBC
  { 2, OperandInfo51 },  // Inst #279 = BLBS
  { 2, OperandInfo51 },  // Inst #280 = BLE
  { 2, OperandInfo51 },  // Inst #281 = BLT
  { 2, OperandInfo51 },  // Inst #282 = BNE
  { 1, OperandInfo2 },  // Inst #283 = BR
  { 1, OperandInfo2 },  // Inst #284 = BSR
  { 4, OperandInfo52 },  // Inst #285 = CMOVEQi
  { 4, OperandInfo53 },  // Inst #286 = CMOVEQr
  { 4, OperandInfo52 },  // Inst #287 = CMOVGEi
  { 4, OperandInfo53 },  // Inst #288 = CMOVGEr
  { 4, OperandInfo52 },  // Inst #289 = CMOVGTi
  { 4, OperandInfo53 },  // Inst #290 = CMOVGTr
  { 4, OperandInfo52 },  // Inst #291 = CMOVLBCi
  { 4, OperandInfo53 },  // Inst #292 = CMOVLBCr
  { 4, OperandInfo52 },  // Inst #293 = CMOVLBSi
  { 4, OperandInfo53 },  // Inst #294 = CMOVLBSr
  { 4, OperandInfo52 },  // Inst #295 = CMOVLEi
  { 4, OperandInfo53 },  // Inst #296 = CMOVLEr
  { 4, OperandInfo52 },  // Inst #297 = CMOVLTi
  { 4, OperandInfo53 },  // Inst #298 = CMOVLTr
  { 4, OperandInfo52 },  // Inst #299 = CMOVNEi
  { 4, OperandInfo53 },  // Inst #300 = CMOVNEr
  { 3, OperandInfo46 },  // Inst #301 = CMPBGE
  { 3, OperandInfo48 },  // Inst #302 = CMPBGEi
  { 3, OperandInfo46 },  // Inst #303 = CMPEQ
  { 3, OperandInfo48 },  // Inst #304 = CMPEQi
  { 3, OperandInfo46 },  // Inst #305 = CMPLE
  { 3, OperandInfo48 },  // Inst #306 = CMPLEi
  { 3, OperandInfo46 },  // Inst #307 = CMPLT
  { 3, OperandInfo48 },  // Inst #308 = CMPLTi
  { 3, OperandInfo50 },  // Inst #309 = CMPTEQ
  { 3, OperandInfo50 },  // Inst #310 = CMPTLE
  { 3, OperandInfo50 },  // Inst #311 = CMPTLT
  { 3, OperandInfo50 },  // Inst #312 = CMPTUN
  { 3, OperandInfo46 },  // Inst #313 = CMPULE
  { 3, OperandInfo48 },  // Inst #314 = CMPULEi
  { 3, OperandInfo46 },  // Inst #315 = CMPULT
  { 3, OperandInfo48 },  // Inst #316 = CMPULTi
  { 3, OperandInfo54 },  // Inst #317 = COND_BRANCH_F
  { 3, OperandInfo55 },  // Inst #318 = COND_BRANCH_I
  { 3, OperandInfo49 },  // Inst #319 = CPYSES
  { 3, OperandInfo56 },  // Inst #320 = CPYSESt
  { 3, OperandInfo50 },  // Inst #321 = CPYSET
  { 3, OperandInfo49 },  // Inst #322 = CPYSNS
  { 3, OperandInfo56 },  // Inst #323 = CPYSNSt
  { 3, OperandInfo50 },  // Inst #324 = CPYSNT
  { 3, OperandInfo57 },  // Inst #325 = CPYSNTs
  { 3, OperandInfo49 },  // Inst #326 = CPYSS
  { 3, OperandInfo56 },  // Inst #327 = CPYSSt
  { 3, OperandInfo50 },  // Inst #328 = CPYST
  { 3, OperandInfo57 },  // Inst #329 = CPYSTs
  { 2, OperandInfo58 },  // Inst #330 = CTLZ
  { 2, OperandInfo58 },  // Inst #331 = CTPOP
  { 2, OperandInfo58 },  // Inst #332 = CTTZ
  { 2, OperandInfo59 },  // Inst #333 = CVTQS
  { 2, OperandInfo60 },  // Inst #334 = CVTQT
  { 2, OperandInfo61 },  // Inst #335 = CVTST
  { 2, OperandInfo60 },  // Inst #336 = CVTTQ
  { 2, OperandInfo59 },  // Inst #337 = CVTTS
  { 3, OperandInfo49 },  // Inst #338 = DIVS
  { 3, OperandInfo50 },  // Inst #339 = DIVT
  { 3, OperandInfo48 },  // Inst #340 = EQVi
  { 3, OperandInfo46 },  // Inst #341 = EQVr
  { 3, OperandInfo46 },  // Inst #342 = EXTBL
  { 3, OperandInfo46 },  // Inst #343 = EXTLL
  { 3, OperandInfo46 },  // Inst #344 = EXTWL
  { 2, OperandInfo62 },  // Inst #345 = FBEQ
  { 2, OperandInfo62 },  // Inst #346 = FBGE
  { 2, OperandInfo62 },  // Inst #347 = FBGT
  { 2, OperandInfo62 },  // Inst #348 = FBLE
  { 2, OperandInfo62 },  // Inst #349 = FBLT
  { 2, OperandInfo62 },  // Inst #350 = FBNE
  { 4, OperandInfo63 },  // Inst #351 = FCMOVEQS
  { 4, OperandInfo64 },  // Inst #352 = FCMOVEQT
  { 4, OperandInfo63 },  // Inst #353 = FCMOVGES
  { 4, OperandInfo64 },  // Inst #354 = FCMOVGET
  { 4, OperandInfo63 },  // Inst #355 = FCMOVGTS
  { 4, OperandInfo64 },  // Inst #356 = FCMOVGTT
  { 4, OperandInfo63 },  // Inst #357 = FCMOVLES
  { 4, OperandInfo64 },  // Inst #358 = FCMOVLET
  { 4, OperandInfo63 },  // Inst #359 = FCMOVLTS
  { 4, OperandInfo64 },  // Inst #360 = FCMOVLTT
  { 4, OperandInfo63 },  // Inst #361 = FCMOVNES
  { 4, OperandInfo64 },  // Inst #362 = FCMOVNET
  { 2, OperandInfo65 },  // Inst #363 = FTOIS
  { 2, OperandInfo66 },  // Inst #364 = FTOIT
  { 2, OperandInfo67 },  // Inst #365 = ITOFS
  { 2, OperandInfo68 },  // Inst #366 = ITOFT
  { 1, OperandInfo69 },  // Inst #367 = JMP
  { 0, 0 },  // Inst #368 = JSR
  { 3, OperandInfo48 },  // Inst #369 = JSR_COROUTINE
  { 0, 0 },  // Inst #370 = JSRs
  { 3, OperandInfo70 },  // Inst #371 = LDA
  { 3, OperandInfo70 },  // Inst #372 = LDAH
  { 4, OperandInfo71 },  // Inst #373 = LDAHg
  { 3, OperandInfo70 },  // Inst #374 = LDAHr
  { 4, OperandInfo71 },  // Inst #375 = LDAg
  { 3, OperandInfo70 },  // Inst #376 = LDAr
  { 3, OperandInfo70 },  // Inst #377 = LDBU
  { 3, OperandInfo70 },  // Inst #378 = LDBUr
  { 3, OperandInfo70 },  // Inst #379 = LDL
  { 3, OperandInfo70 },  // Inst #380 = LDL_L
  { 3, OperandInfo70 },  // Inst #381 = LDLr
  { 3, OperandInfo70 },  // Inst #382 = LDQ
  { 3, OperandInfo70 },  // Inst #383 = LDQ_L
  { 3, OperandInfo70 },  // Inst #384 = LDQl
  { 3, OperandInfo70 },  // Inst #385 = LDQr
  { 3, OperandInfo72 },  // Inst #386 = LDS
  { 3, OperandInfo72 },  // Inst #387 = LDSr
  { 3, OperandInfo73 },  // Inst #388 = LDT
  { 3, OperandInfo73 },  // Inst #389 = LDTr
  { 3, OperandInfo70 },  // Inst #390 = LDWU
  { 3, OperandInfo70 },  // Inst #391 = LDWUr
  { 0, 0 },  // Inst #392 = MB
  { 3, OperandInfo48 },  // Inst #393 = MULLi
  { 3, OperandInfo46 },  // Inst #394 = MULLr
  { 3, OperandInfo48 },  // Inst #395 = MULQi
  { 3, OperandInfo46 },  // Inst #396 = MULQr
  { 3, OperandInfo49 },  // Inst #397 = MULS
  { 3, OperandInfo50 },  // Inst #398 = MULT
  { 3, OperandInfo48 },  // Inst #399 = ORNOTi
  { 3, OperandInfo46 },  // Inst #400 = ORNOTr
  { 0, 0 },  // Inst #401 = RETDAG
  { 0, 0 },  // Inst #402 = RETDAGp
  { 1, OperandInfo69 },  // Inst #403 = RPCC
  { 3, OperandInfo48 },  // Inst #404 = S4ADDLi
  { 3, OperandInfo46 },  // Inst #405 = S4ADDLr
  { 3, OperandInfo48 },  // Inst #406 = S4ADDQi
  { 3, OperandInfo46 },  // Inst #407 = S4ADDQr
  { 3, OperandInfo48 },  // Inst #408 = S4SUBLi
  { 3, OperandInfo46 },  // Inst #409 = S4SUBLr
  { 3, OperandInfo48 },  // Inst #410 = S4SUBQi
  { 3, OperandInfo46 },  // Inst #411 = S4SUBQr
  { 3, OperandInfo48 },  // Inst #412 = S8ADDLi
  { 3, OperandInfo46 },  // Inst #413 = S8ADDLr
  { 3, OperandInfo48 },  // Inst #414 = S8ADDQi
  { 3, OperandInfo46 },  // Inst #415 = S8ADDQr
  { 3, OperandInfo48 },  // Inst #416 = S8SUBLi
  { 3, OperandInfo46 },  // Inst #417 = S8SUBLr
  { 3, OperandInfo48 },  // Inst #418 = S8SUBQi
  { 3, OperandInfo46 },  // Inst #419 = S8SUBQr
  { 2, OperandInfo58 },  // Inst #420 = SEXTB
  { 2, OperandInfo58 },  // Inst #421 = SEXTW
  { 3, OperandInfo48 },  // Inst #422 = SLi
  { 3, OperandInfo46 },  // Inst #423 = SLr
  { 2, OperandInfo74 },  // Inst #424 = SQRTS
  { 2, OperandInfo60 },  // Inst #425 = SQRTT
  { 3, OperandInfo48 },  // Inst #426 = SRAi
  { 3, OperandInfo46 },  // Inst #427 = SRAr
  { 3, OperandInfo48 },  // Inst #428 = SRLi
  { 3, OperandInfo46 },  // Inst #429 = SRLr
  { 3, OperandInfo70 },  // Inst #430 = STB
  { 3, OperandInfo70 },  // Inst #431 = STBr
  { 3, OperandInfo70 },  // Inst #432 = STL
  { 4, OperandInfo75 },  // Inst #433 = STL_C
  { 3, OperandInfo70 },  // Inst #434 = STLr
  { 3, OperandInfo70 },  // Inst #435 = STQ
  { 4, OperandInfo75 },  // Inst #436 = STQ_C
  { 3, OperandInfo70 },  // Inst #437 = STQr
  { 3, OperandInfo72 },  // Inst #438 = STS
  { 3, OperandInfo72 },  // Inst #439 = STSr
  { 3, OperandInfo73 },  // Inst #440 = STT
  { 3, OperandInfo73 },  // Inst #441 = STTr
  { 3, OperandInfo70 },  // Inst #442 = STW
  { 3, OperandInfo70 },  // Inst #443 = STWr
  { 3, OperandInfo48 },  // Inst #444 = SUBLi
  { 3, OperandInfo46 },  // Inst #445 = SUBLr
  { 3, OperandInfo48 },  // Inst #446 = SUBQi
  { 3, OperandInfo46 },  // Inst #447 = SUBQr
  { 3, OperandInfo49 },  // Inst #448 = SUBS
  { 3, OperandInfo50 },  // Inst #449 = SUBT
  { 3, OperandInfo48 },  // Inst #450 = UMULHi
  { 3, OperandInfo46 },  // Inst #451 = UMULHr
  { 0, 0 },  // Inst #452 = WMB
  { 3, OperandInfo48 },  // Inst #453 = XORi
  { 3, OperandInfo46 },  // Inst #454 = XORr
  { 3, OperandInfo48 },  // Inst #455 = ZAPNOTi
};

#endif // GET_INSTRINFO_MC_DESC


